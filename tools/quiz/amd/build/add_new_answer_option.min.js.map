{"version":3,"file":"add_new_answer_option.min.js","sources":["../src/add_new_answer_option.js"],"sourcesContent":["import { call as fetchMany } from 'core/ajax';\nimport { exception as displayException } from 'core/notification';\nimport Templates from 'core/templates';\n\nexport const init = () => {\n\n    // Get all up elements.\n    var ao = document.getElementById('add_answer_option');\n\n    if (!ao) {\n        return;\n    }\n\n    ao.addEventListener(\"click\", store);\n\n    /**\n     * Create new page.\n     */\n    function store() {\n        var pageid = this.dataset.pageid;\n        storeNewAnswerOption(pageid);\n    }\n};\n\n/**\n * Call to create a new instance\n * @param {int} pageid\n * @returns\n */\nconst execStoreNewAnswerOption = (\n    pageid,\n) => fetchMany([{\n    methodname: 'mootimetertool_quiz_new_answeroption',\n    args: {\n        pageid,\n    },\n}])[0];\n\n/**\n * Executes the call to create a new page.\n * @param {int} pageid\n */\nconst storeNewAnswerOption = async (pageid) => {\n    const response = await execStoreNewAnswerOption(pageid);\n\n    const context = {\n        'mtm-input-id': 'ao_text_' + response.aoid,\n        'mtm-input-name': 'ao_text',\n        'ajaxmethode': \"mootimetertool_quiz_store_answeroption_text\",\n        'additional_class': 'mootimeter-answer-options mootimeter_settings_selector',\n        'dataset': 'data-pageid=' + pageid + ' data-aoid=' + response.aoid,\n\n        'mtm-cb-without-label-id': 'ao_iscorrect_' + response.aoid,\n        'mtm-cb-without-label-name': 'ao_iscorrect',\n        'mtm-cb-without-label-ajaxmethode': \"mootimetertool_quiz_store_answeroption_is_correct\",\n\n        'button_icon_only_transparent_additionalclass': 'mootimeter-answer-options',\n        'button_icon_only_transparent_dataset': 'data-pageid=\"' + pageid + '\" data-aoid=\"' + response.aoid + '\"',\n        'button_icon_only_transparent_icon': 'fa-close',\n    };\n\n    // Add the answer to the Badges list.\n    Templates.renderForPromise('mod_mootimeter/elements/snippet_input_with_checkbox-icon', context)\n        .then(({ html, js }) => {\n            Templates.appendNodeContents('#mtmt-quiz-ao-wrapper', html, js);\n            Templates.runTemplateJS(js);\n            return true;\n        })\n        .catch((error) => displayException(error));\n\n    return;\n};\n"],"names":["ao","document","getElementById","addEventListener","pageid","this","dataset","storeNewAnswerOption","async","response","methodname","args","execStoreNewAnswerOption","context","aoid","renderForPromise","then","_ref","html","js","appendNodeContents","runTemplateJS","catch","error"],"mappings":"oUAIoB,SAGZA,GAAKC,SAASC,eAAe,qBAE5BF,IAILA,GAAGG,iBAAiB,wBAMZC,OAASC,KAAKC,QAAQF,OAC1BG,qBAAqBH,kBAsBvBG,qBAAuBC,MAAAA,eACnBC,cAbNL,CAAAA,SACC,cAAU,CAAC,CACZM,WAAY,uCACZC,KAAM,CACFP,OAAAA,WAEJ,GAOuBQ,CAAyBR,QAE1CS,QAAU,gBACI,WAAaJ,SAASK,sBACpB,sBACH,+DACK,iEACT,eAAiBV,OAAS,cAAgBK,SAASK,+BAEnC,gBAAkBL,SAASK,iCACzB,kDACO,iGAEY,iEACR,gBAAkBV,OAAS,gBAAkBK,SAASK,KAAO,sCAChE,+BAI/BC,iBAAiB,2DAA4DF,SAClFG,MAAKC,WAACC,KAAEA,KAAFC,GAAQA,mCACDC,mBAAmB,wBAAyBF,KAAMC,uBAClDE,cAAcF,KACjB,KAEVG,OAAOC,QAAU,2BAAiBA"}