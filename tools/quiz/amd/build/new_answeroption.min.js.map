{"version":3,"file":"new_answeroption.min.js","sources":["../src/new_answeroption.js"],"sourcesContent":["import Ajax from 'core/ajax';\nimport { exception as displayException } from 'core/notification';\nimport Templates from 'core/templates';\nimport notification from 'core/notification';\n\nexport const init = () => {\n\n    // Register event to input box.\n    var pageid = document.getElementById('mtmt_question_section').dataset.pageid;\n\n    var element = document.getElementById('new_ao_label');\n\n    element.addEventListener('click', function () {\n\n        const promise = Ajax.call([{\n            methodname: 'mootimetertool_quiz_new_answeroption',\n            args: {\n                pageid: pageid,\n            },\n            fail: notification.exception,\n        }]);\n\n        promise[0].then(function (results) {\n            const context = {\n                aoid: results.aoid,\n                isediting: true,\n                [results.quiztype]: true\n            };\n            window.console.log(context);\n\n            // Add the answer to the Badges list.\n            Templates.renderForPromise('mootimetertool_quiz/answer_option', context)\n                .then(({ html, js }) => {\n                    Templates.appendNodeContents('#mtmt_questions', html, js);\n\n                    // Now add an event listener.\n                    document.getElementById('ao_text_' + results.aoid).addEventListener('keyup', delay(function () {\n                        var aoid = this.parentElement.dataset.aoid;\n\n                        Ajax.call([{\n                            methodname: 'mootimetertool_quiz_store_answeroption',\n                            args: {\n                                pageid: pageid,\n                                aoid: aoid,\n                                value: this.value,\n                                id: this.id\n                            },\n                            fail: notification.exception,\n                        }]);\n\n                    }, 1000));\n                    return true;\n                })\n                .catch((error) => displayException(error));\n\n            return;\n\n        }).fail();\n    });\n\n    /**\n    * Delay a callback for ms.\n    * @param callback {{string}}\n    * @param ms\n    * @returns {object}\n    */\n    function delay(callback, ms) {\n        var timer = 0;\n        return function () {\n            var context = this, args = arguments;\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                callback.apply(context, args);\n            }, ms || 0);\n        };\n    }\n};\n"],"names":["pageid","document","getElementById","dataset","addEventListener","Ajax","call","methodname","args","fail","notification","exception","then","results","context","aoid","isediting","quiztype","window","console","log","renderForPromise","_ref","html","js","callback","ms","timer","appendNodeContents","this","parentElement","value","id","arguments","clearTimeout","setTimeout","apply","catch","error"],"mappings":"01CAKoB,SAGZA,OAASC,SAASC,eAAe,yBAAyBC,QAAQH,OAExDC,SAASC,eAAe,gBAE9BE,iBAAiB,SAAS,WAEdC,cAAKC,KAAK,CAAC,CACvBC,WAAY,uCACZC,KAAM,CACFR,OAAQA,QAEZS,KAAMC,sBAAaC,aAGf,GAAGC,MAAK,SAAUC,eAChBC,QAAU,CACZC,KAAMF,QAAQE,KACdC,WAAW,GACVH,QAAQI,WAAW,GAExBC,OAAOC,QAAQC,IAAIN,4BAGTO,iBAAiB,oCAAqCP,SAC3DF,MAAKU,WAACC,KAAEA,KAAFC,GAAQA,aAkCZC,SAAUC,GACjBC,gCAlCkBC,mBAAmB,kBAAmBL,KAAMC,IAGtDvB,SAASC,eAAe,WAAaW,QAAQE,MAAMX,iBAAiB,SA8BrEqB,SA9BoF,eAC3EV,KAAOc,KAAKC,cAAc3B,QAAQY,mBAEjCT,KAAK,CAAC,CACPC,WAAY,yCACZC,KAAM,CACFR,OAAQA,OACRe,KAAMA,KACNgB,MAAOF,KAAKE,MACZC,GAAIH,KAAKG,IAEbvB,KAAMC,sBAAaC,cAmBlBe,GAhBN,IAiBXC,MAAQ,EACL,eACCb,QAAUe,KAAMrB,KAAOyB,UAC3BC,aAAaP,OACbA,MAAQQ,YAAW,WACfV,SAASW,MAAMtB,QAASN,QACzBkB,IAAM,OAtBM,KAEVW,OAAOC,QAAU,2BAAiBA,YAIxC7B"}