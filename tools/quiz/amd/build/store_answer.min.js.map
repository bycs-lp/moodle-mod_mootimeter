{"version":3,"file":"store_answer.min.js","sources":["../src/store_answer.js"],"sourcesContent":["import { call as fetchMany } from 'core/ajax';\n\nexport const init = () => {\n\n    // Get all up elements.\n    var submitbtn = document.getElementById('mtmt_store_answer');\n\n    if (!submitbtn) {\n        return;\n    }\n\n    submitbtn.addEventListener(\"click\", store);\n\n    /**\n     * Create new page.\n     */\n    function store() {\n        const selectedanswerids = [];\n        var pageid = this.dataset.pageid;\n        var checkboxes = document.getElementsByName('multipleanswers[]');\n        window.console.log(pageid);\n        window.console.log(checkboxes);\n        for (var checkbox of checkboxes) {\n            if (checkbox.checked) {\n                selectedanswerids.push(checkbox.value);\n            }\n        }\n        storeAnswer(pageid, selectedanswerids);\n    }\n\n};\n\n/**\n * Call to create a new instance\n * @param {int} pageid\n * @param {string} selectedanswerids\n * @returns\n */\nconst execStoreAnswer = (\n    pageid,\n    aoids\n) => fetchMany([{\n    methodname: 'mootimetertool_quiz_store_answer',\n    args: {\n        pageid,\n        aoids\n    },\n}])[0];\n\n/**\n * Executes the call to create a new page.\n * @param {int} pageid\n * @param {array} selectedanswerids\n */\nconst storeAnswer = async (pageid, selectedanswerids) => {\n    selectedanswerids = JSON.stringify(selectedanswerids);\n    const response = await execStoreAnswer(pageid, selectedanswerids);\n    if (response.code != 200) {\n        window.console.log(response.string);\n    }\n    if (response.code == 200) {\n        window.console.log(response.string);\n    }\n};\n\n\n\n// import Ajax from 'core/ajax';\n// import notification from 'core/notification';\n\n// export const init = () => {\n\n//     // Register event to input box.\n//     var elements = document.getElementsByClassName(\"mtmt_answeroption\");\n//     var pageid = document.getElementById('mtmt_question_section').dataset.pageid;\n\n//     Array.from(elements).forEach(function (element) {\n//         if (!element) {\n//             return;\n//         }\n//         element.addEventListener('click', function () {\n//             var aoid = this.dataset.aoid;\n\n//             let promise = Ajax.call([{\n//                 methodname: 'mootimetertool_quiz_store_answer',\n//                 args: {\n//                     pageid: pageid,\n//                     aoid: aoid,\n//                 },\n//                 fail: notification.exception,\n//             }]);\n\n//             promise[0].then(function (results) {\n//                 if (results.finished) {\n//                     window.location.href = results.redirecturl;\n//                 }\n//                 return;\n//             }).fail();\n//         });\n//     });\n// };"],"names":["submitbtn","document","getElementById","addEventListener","selectedanswerids","pageid","this","dataset","checkboxes","getElementsByName","checkbox","window","console","log","checked","push","value","storeAnswer","async","JSON","stringify","response","aoids","methodname","args","execStoreAnswer","code","string"],"mappings":"uLAEoB,SAGZA,UAAYC,SAASC,eAAe,qBAEnCF,WAILA,UAAUG,iBAAiB,0BAMjBC,kBAAoB,OACtBC,OAASC,KAAKC,QAAQF,OACtBG,WAAaP,SAASQ,kBAAkB,yBAGvC,IAAIC,YAFTC,OAAOC,QAAQC,IAAIR,QACnBM,OAAOC,QAAQC,IAAIL,YACEA,YACbE,SAASI,SACTV,kBAAkBW,KAAKL,SAASM,OAGxCC,YAAYZ,OAAQD,6BA2BtBa,YAAcC,MAAOb,OAAQD,qBAC/BA,kBAAoBe,KAAKC,UAAUhB,yBAC7BiB,cAlBc,EACpBhB,OACAiB,SACC,cAAU,CAAC,CACZC,WAAY,mCACZC,KAAM,CACFnB,OAAAA,OACAiB,MAAAA,UAEJ,GASuBG,CAAgBpB,OAAQD,mBAC1B,KAAjBiB,SAASK,MACTf,OAAOC,QAAQC,IAAIQ,SAASM,QAEX,KAAjBN,SAASK,MACTf,OAAOC,QAAQC,IAAIQ,SAASM"}