{"version":3,"file":"store_visualization.min.js","sources":["../src/store_visualization.js"],"sourcesContent":["import { call as fetchMany } from 'core/ajax';\n\nexport const init = () => {\n\n    // Get all up elements.\n    var visualizationElements = document.getElementsByClassName('mtmt_visualization_selector');\n\n    for (let i = 0; i < visualizationElements.length; i++) {\n        // Remove old listener if exists.\n        visualizationElements[i].removeEventListener(\"click\", store);\n        // Finally add the new listener.\n        visualizationElements[i].addEventListener(\"click\", store);\n    }\n    /**\n     * Create new page.\n     */\n    function store() {\n        var pageid = this.dataset.pageid;\n        var visualizationtypeid = this.dataset.visuid;\n        storeVisualizationType(pageid, visualizationtypeid);\n    }\n};\n\n/**\n * Call to create a new instance\n * @param {int} pageid\n * @param {int} visuid\n * @returns\n */\nconst execStoreVisualizationType = (\n    pageid,\n    visuid\n) => fetchMany([{\n    methodname: 'mootimetertool_quiz_store_visualizationtype',\n    args: {\n        pageid,\n        visuid\n    },\n}])[0];\n\n/**\n * Executes the call to create a new page.\n * @param {int} pageid\n * @param {int} visuid\n */\nconst storeVisualizationType = async (pageid, visuid) => {\n    const response = await execStoreVisualizationType(pageid, visuid);\n    if (response.code != 200) {\n        window.console.log(response.string);\n    }\n    if (response.code == 200) {\n\n        var visualizationElements = document.getElementsByClassName('mtmt_visualization_selector');\n        for (let i = 0; i < visualizationElements.length; i++) {\n            visualizationElements[i].classList.remove(\"active\");\n        }\n        document.getElementById('visualization_' + visuid).classList.add(\"active\");\n    }\n};"],"names":["visualizationElements","document","getElementsByClassName","i","length","removeEventListener","store","addEventListener","pageid","this","dataset","visualizationtypeid","visuid","storeVisualizationType","async","response","methodname","args","execStoreVisualizationType","code","window","console","log","string","classList","remove","getElementById","add"],"mappings":"8LAEoB,SAGZA,sBAAwBC,SAASC,uBAAuB,mCAEvD,IAAIC,EAAI,EAAGA,EAAIH,sBAAsBI,OAAQD,IAE9CH,sBAAsBG,GAAGE,oBAAoB,QAASC,OAEtDN,sBAAsBG,GAAGI,iBAAiB,QAASD,gBAK9CA,YACDE,OAASC,KAAKC,QAAQF,OACtBG,oBAAsBF,KAAKC,QAAQE,OACvCC,uBAAuBL,OAAQG,6BA0BjCE,uBAAyBC,MAAON,OAAQI,gBACpCG,cAjByB,EAC/BP,OACAI,UACC,cAAU,CAAC,CACZI,WAAY,8CACZC,KAAM,CACFT,OAAAA,OACAI,OAAAA,WAEJ,GAQuBM,CAA2BV,OAAQI,WACrC,KAAjBG,SAASI,MACTC,OAAOC,QAAQC,IAAIP,SAASQ,QAEX,KAAjBR,SAASI,KAAa,KAElBnB,sBAAwBC,SAASC,uBAAuB,mCACvD,IAAIC,EAAI,EAAGA,EAAIH,sBAAsBI,OAAQD,IAC9CH,sBAAsBG,GAAGqB,UAAUC,OAAO,UAE9CxB,SAASyB,eAAe,iBAAmBd,QAAQY,UAAUG,IAAI"}