{"version":3,"file":"store_answer.min.js","sources":["../src/store_answer.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\n\nexport const init = () => {\n\n    // Register event to input box.\n    var ao = document.getElementById('mootimeter_type_answer');\n    if (ao) {\n        ao.addEventListener(\"keyup\", function (event) {\n            if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n                store();\n            }\n        });\n    }\n\n    // Register event to submit button.\n    var ae = document.getElementById('mootimeter_enter_answer');\n    if (ae) {\n        ae.addEventListener(\"click\", function () {\n            store();\n        });\n    }\n\n    /**\n     * Create new page.\n     */\n    function store() {\n        var pageid = document.getElementById('mootimeter_type_answer').dataset.pageid;\n        var answer = document.getElementById('mootimeter_type_answer').value;\n        storeAnswer(pageid, answer);\n    }\n};\n\n/**\n * Call to store an answer\n * @param {int} pageid\n * @param {string} answer\n * @returns\n */\nconst execStoreAnswer = (\n    pageid,\n    answer,\n) => fetchMany([{\n    methodname: 'mootimetertool_wordcloud_store_answer',\n    args: {\n        pageid,\n        answer\n    },\n}])[0];\n\n/**\n * Executes the call to store an answer.\n * @param {int} pageid\n * @param {string} answer\n */\nconst storeAnswer = async (pageid, answer) => {\n    const response = await execStoreAnswer(pageid, answer);\n\n    removeInfoBox();\n\n    if (response.code == 1000 || response.code == 1001 || response.code == 1002) {\n        renderInfoBox(\"warning\", response.string);\n    }\n\n    if (response.code == 200) {\n\n        const context = {\n            pill: answer,\n            additional_class: ' mootimeter-pill-inline '\n        };\n\n        // Add the answer to the Badges list.\n        Templates.renderForPromise('mod_mootimeter/elements/snippet_pill', context)\n            .then(({html, js}) => {\n                Templates.appendNodeContents('#mtmt_wordcloud_pills', html, js);\n                return true;\n            })\n            .catch((error) => displayException(error));\n    }\n\n    // In any case: Empty the input field after post.\n    document.getElementById('mootimeter_type_answer').value = \"\";\n};\n\n/**\n * Generate an info box.\n * @param {string} notificationType\n * @param {string} notificationString\n */\nfunction renderInfoBox(notificationType, notificationString) {\n\n    const context = {\n        \"notification_id\": \"mtmt_answer_warning\",\n        \"notification_type\": notificationType,\n        \"notification_icon\": \"fa-exclamation\",\n        \"notification_text\": notificationString\n    };\n\n    Templates.renderForPromise('mod_mootimeter/elements/snippet_notification', context)\n        .then(({html, js}) => {\n            Templates.appendNodeContents('#mtmt_tool-colct-header', html, js);\n            return true;\n        })\n        .catch((error) => displayException(error));\n}\n\n/**\n * Remove the info box.\n */\nfunction removeInfoBox() {\n    var infobox = document.getElementById(\"mtmt_answer_warning\");\n    if (infobox) {\n        infobox.remove();\n    }\n\n}"],"names":["ao","document","getElementById","addEventListener","event","code","store","ae","pageid","dataset","answer","value","storeAnswer","async","response","methodname","args","execStoreAnswer","infobox","remove","notificationType","notificationString","context","renderForPromise","then","_ref2","html","js","appendNodeContents","catch","error","renderInfoBox","string","pill","additional_class","_ref"],"mappings":"gUAIoB,SAGZA,GAAKC,SAASC,eAAe,0BAC7BF,IACAA,GAAGG,iBAAiB,SAAS,SAAUC,OAChB,UAAfA,MAAMC,MAAmC,gBAAfD,MAAMC,MAChCC,eAMRC,GAAKN,SAASC,eAAe,oCAUxBI,YACDE,OAASP,SAASC,eAAe,0BAA0BO,QAAQD,OACnEE,OAAST,SAASC,eAAe,0BAA0BS,MAC/DC,YAAYJ,OAAQE,QAZpBH,IACAA,GAAGJ,iBAAiB,SAAS,WACzBG,kBAoCNM,YAAcC,MAAOL,OAAQE,gBACzBI,cAjBc,EACpBN,OACAE,UACC,cAAU,CAAC,CACZK,WAAY,wCACZC,KAAM,CACFR,OAAAA,OACAE,OAAAA,WAEJ,GAQuBO,CAAgBT,OAAQE,YAsD3CQ,YAAAA,QAAUjB,SAASC,eAAe,yBAElCgB,QAAQC,SApDS,KAAjBL,SAAST,MAAiC,MAAjBS,SAAST,MAAiC,MAAjBS,SAAST,eA6B5Ce,iBAAkBC,0BAE/BC,QAAU,iBACO,wCACEF,mCACA,mCACAC,uCAGfE,iBAAiB,+CAAgDD,SACtEE,MAAKC,YAACC,KAACA,KAADC,GAAOA,oCACAC,mBAAmB,0BAA2BF,KAAMC,KACvD,KAEVE,OAAOC,QAAU,2BAAiBA,SA1CnCC,CAAc,UAAWjB,SAASkB,QAGjB,KAAjBlB,SAAST,KAAa,OAEhBiB,QAAU,CACZW,KAAMvB,OACNwB,iBAAkB,+CAIZX,iBAAiB,uCAAwCD,SAC9DE,MAAKW,WAACT,KAACA,KAADC,GAAOA,mCACAC,mBAAmB,wBAAyBF,KAAMC,KACrD,KAEVE,OAAOC,QAAU,2BAAiBA,SAI3C7B,SAASC,eAAe,0BAA0BS,MAAQ"}