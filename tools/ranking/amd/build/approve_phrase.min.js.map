{"version":3,"file":"approve_phrase.min.js","sources":["../src/approve_phrase.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport {execReloadPage as reloadPage} from 'mod_mootimeter/reload_page';\nimport {renderInfoBox} from 'mod_mootimeter/utils';\nimport {removeInfoBox} from 'mod_mootimeter/utils';\n\nexport const init = (yesid, noid, radioname) => {\n\n    // var yesObj = document.getElementById(yesid);\n    // var noObj = document.getElementById(noid);\n\n    // window.console.log(yesObj);\n    // window.console.log(noObj);\n    // if (!document.getElementById(yesObj) || !document.getElementById(noObj)) {\n    //     return;\n    // }\n\n    window.console.log('input[type=\"radio\"][name=\"' + radioname + '\"]');\n    for (let elem of document.querySelectorAll('input[type=\"radio\"][name=\"' + radioname +'\"]')) {\n        elem.addEventListener(\"input\", (event) => {\n            approve(event);\n        });\n    }\n\n    // yesObj.addEventListener(\"change\", approve);\n    // noObj.addEventListener(\"change\", approve);\n\n    /**\n     * Create new page.\n     * @param {object} event\n     */\n    function approve(event) {\n        const id = event.target.id;\n        const pageid = document.getElementById(id).dataset.pageid;\n        const phraseid = document.getElementById(id).dataset.phraseid;\n        const togglevalue = document.getElementById(id).dataset.togglevalue;\n        window.console.log([id, pageid, phraseid, togglevalue]);\n        approvePhrase(id, pageid, phraseid, togglevalue);\n    }\n};\n\n/**\n * Call to approve a phrase\n * @param {int} pageid\n * @param {int} phraseid\n * @param {int} value\n */\nconst execApprovePhrase = (\n    pageid,\n    phraseid,\n    value\n) => fetchMany([{\n    methodname: 'mootimetertool_ranking_approve_phrase',\n    args: {\n        pageid,\n        phraseid,\n        value\n    },\n}])[0];\n\n/**\n * Executes the call to approve a phrase.\n * @param {string} inputid\n * @param {int} pageid\n * @param {int} phraseid\n * @param {int} togglevalue\n */\nconst approvePhrase = async (inputid, pageid, phraseid, togglevalue) => {\n\n    // Disable the input field until the page is refreshed.\n    document.getElementById(inputid).disabled = true;\n\n    const response = await execApprovePhrase(pageid, phraseid, togglevalue);\n\n    const infoboxid = \"mtmt_phrase_warning\";\n\n    removeInfoBox(infoboxid);\n\n    if (response.code != 200) {\n        renderInfoBox(\"mtmt_tool-colct-header\", infoboxid, \"warning\", response.string);\n        document.getElementById(inputid).disabled = false;\n        document.getElementById(inputid).focus();\n    }\n\n    if (response.code == 200) {\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        await reloadPage(urlParams.get('pageid'), urlParams.get('id'));\n    }\n};\n"],"names":["yesid","noid","radioname","window","console","log","elem","document","querySelectorAll","addEventListener","event","approve","id","target","pageid","getElementById","dataset","phraseid","togglevalue","approvePhrase","async","inputid","disabled","response","value","methodname","args","execApprovePhrase","code","string","focus","queryString","location","search","urlParams","URLSearchParams","get"],"mappings":"oQAKoB,CAACA,MAAOC,KAAMC,aAW9BC,OAAOC,QAAQC,IAAI,6BAA+BH,UAAY,UACzD,IAAII,QAAQC,SAASC,iBAAiB,6BAA+BN,UAAW,MACjFI,KAAKG,iBAAiB,SAAUC,QAC5BC,QAAQD,mBAWPC,QAAQD,aACPE,GAAKF,MAAMG,OAAOD,GAClBE,OAASP,SAASQ,eAAeH,IAAII,QAAQF,OAC7CG,SAAWV,SAASQ,eAAeH,IAAII,QAAQC,SAC/CC,YAAcX,SAASQ,eAAeH,IAAII,QAAQE,YACxDf,OAAOC,QAAQC,IAAI,CAACO,GAAIE,OAAQG,SAAUC,cAC1CC,cAAcP,GAAIE,OAAQG,SAAUC,qBA8BtCC,cAAgBC,MAAOC,QAASP,OAAQG,SAAUC,eAGpDX,SAASQ,eAAeM,SAASC,UAAW,QAEtCC,cAzBgB,EACtBT,OACAG,SACAO,SACC,cAAU,CAAC,CACZC,WAAY,wCACZC,KAAM,CACFZ,OAAAA,OACAG,SAAAA,SACAO,MAAAA,UAEJ,GAcuBG,CAAkBb,OAAQG,SAAUC,yCAEzC,uBAIG,KAAjBK,SAASK,gCACK,yBALA,sBAKqC,UAAWL,SAASM,QACvEtB,SAASQ,eAAeM,SAASC,UAAW,EAC5Cf,SAASQ,eAAeM,SAASS,SAGhB,KAAjBP,SAASK,KAAa,OAChBG,YAAc5B,OAAO6B,SAASC,OAC9BC,UAAY,IAAIC,gBAAgBJ,mBAChC,+BAAWG,UAAUE,IAAI,UAAWF,UAAUE,IAAI"}