define("mod_mootimeter/settings/select",["exports","mod_mootimeter/settings/setting","mod_mootimeter/util"],(function(_exports,_setting,Util){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_setting=(obj=_setting)&&obj.__esModule?obj:{default:obj},Util=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Util);
/**
   * Class for select setting.
   *
   * @module     mod_mootimeter/settings/select
   * @copyright  2023 Justus Dieckmann WWU
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
class Select extends _setting.default{constructor(){super(...arguments),function(obj,key,value){key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value}(this,"input",void 0)}async renderSetting(){const options=[];for(const key in this.config.options)options.push({value:key,label:this.config.options[key],selected:key+""==this.value+""});const context={elementname:this.config.elementname,label:this.config.label,help:this.config.help,value:this.config.value,options:options},node=await Util.renderTemplate("mod_mootimeter/settings/select",context);return this.input=node.querySelector("select"),node}getValue(){return this.input.value}async setValue(value){this.input.value=value}}return _exports.default=Select,_exports.default}));

//# sourceMappingURL=select.min.js.map