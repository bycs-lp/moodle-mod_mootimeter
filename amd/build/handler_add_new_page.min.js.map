{"version":3,"file":"handler_add_new_page.min.js","sources":["../src/handler_add_new_page.js"],"sourcesContent":["import { call as fetchMany } from 'core/ajax';\n\nexport const init = (uniqueID) => {\n    var obj = document.getElementById(uniqueID);\n\n    if (!document.getElementById(uniqueID)) {\n        return;\n    }\n    obj.addEventListener(\"mouseup\", store);\n\n    /**\n     * Create new page.\n     */\n    function store() {\n        var tool = this.dataset.name;\n        var instance = this.dataset.instance;\n\n        storeNewPage(tool, instance);\n    }\n};\n\n/**\n * Call to create a new instance\n * @param {string} tool\n * @param {int} instance\n * @returns\n */\nconst createNewPage = (\n    tool,\n    instance,\n) => fetchMany([{\n    methodname: 'mod_mootimeter_add_new_page',\n    args: {\n        tool,\n        instance,\n    },\n}])[0];\n\n/**\n * Executes the call to create a new page.\n * @param {string} tool\n * @param {int} instance\n */\nconst storeNewPage = async (tool, instance) => {\n    const response = await createNewPage(tool, instance);\n    window.location.href = window.location.origin\n        + window.location.pathname + \"?id=\" + response.cmid + \"&pageid=\" + response.pageid;\n};"],"names":["uniqueID","obj","document","getElementById","addEventListener","tool","this","dataset","name","instance","storeNewPage","async","response","methodname","args","createNewPage","window","location","href","origin","pathname","cmid","pageid"],"mappings":"0LAEqBA,eACbC,IAAMC,SAASC,eAAeH,UAE7BE,SAASC,eAAeH,WAG7BC,IAAIG,iBAAiB,0BAMbC,KAAOC,KAAKC,QAAQC,KACpBC,SAAWH,KAAKC,QAAQE,SAE5BC,aAAaL,KAAMI,oBA0BrBC,aAAeC,MAAON,KAAMI,kBACxBG,cAjBY,EAClBP,KACAI,YACC,cAAU,CAAC,CACZI,WAAY,8BACZC,KAAM,CACFT,UACAI,sBAEJ,GAQuBM,CAAcV,KAAMI,UAC3CO,OAAOC,SAASC,KAAOF,OAAOC,SAASE,OACjCH,OAAOC,SAASG,SAAW,OAASR,SAASS,KAAO,WAAaT,SAASU,MADhF"}