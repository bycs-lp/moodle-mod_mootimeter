{"version":3,"file":"handler_input.min.js","sources":["../src/handler_input.js"],"sourcesContent":["import { call as fetchMany } from 'core/ajax';\n\nexport const init = () => {\n\n    // Get all up elements.\n    var inputs = document.getElementsByClassName('mootimeter-input mootimeterfullwidth mootimeter_settings_selector');\n\n    for (let i = 0; i < inputs.length; i++) {\n        // Remove old listener if exists.\n        inputs[i].removeEventListener(\"keyup\", mootimeterStoreInput);\n        // Finally add the new listener.\n        inputs[i].addEventListener(\"keyup\", mootimeterStoreInput);\n    }\n\n    /**\n     * Store the value.\n     */\n    function mootimeterStoreInput() {\n        var id = this.id;\n        var pageid = this.dataset.pageid;\n        var ajaxmethode = this.dataset.ajaxmethode;\n        var inputname = this.dataset.name;\n        var inputvalue = document.getElementById(id).value;\n        execStoreInputValue(ajaxmethode, pageid, inputname, inputvalue);\n    }\n};\n\n/**\n * Call to store input value\n * @param {string} ajaxmethode\n * @param {int} pageid\n * @param {string} inputname\n * @param {string} inputvalue\n * @returns\n */\nconst storeInputValue = (\n    ajaxmethode,\n    pageid,\n    inputname,\n    inputvalue\n) => fetchMany([{\n    methodname: ajaxmethode,\n    args: {\n        pageid,\n        inputname,\n        inputvalue\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n * @param {string} ajaxmethode\n * @param {int} pageid\n * @param {string} inputname\n * @param {string} inputvalue\n */\nconst execStoreInputValue = async (ajaxmethode, pageid, inputname, inputvalue) => {\n    const response = await storeInputValue(ajaxmethode, pageid, inputname, inputvalue);\n    if (response.code != 200) {\n        window.console.log(response.string);\n    }\n};"],"names":["inputs","document","getElementsByClassName","i","length","removeEventListener","mootimeterStoreInput","addEventListener","id","this","pageid","dataset","ajaxmethode","inputname","name","inputvalue","getElementById","value","execStoreInputValue","async","response","methodname","args","storeInputValue","code","window","console","log","string"],"mappings":"mLAEoB,SAGZA,OAASC,SAASC,uBAAuB,yEAExC,IAAIC,EAAI,EAAGA,EAAIH,OAAOI,OAAQD,IAE/BH,OAAOG,GAAGE,oBAAoB,QAASC,sBAEvCN,OAAOG,GAAGI,iBAAiB,QAASD,+BAM/BA,2BACDE,GAAKC,KAAKD,GACVE,OAASD,KAAKE,QAAQD,OACtBE,YAAcH,KAAKE,QAAQC,YAC3BC,UAAYJ,KAAKE,QAAQG,KACzBC,WAAad,SAASe,eAAeR,IAAIS,MAC7CC,oBAAoBN,YAAaF,OAAQG,UAAWE,oBAiCtDG,oBAAsBC,MAAOP,YAAaF,OAAQG,UAAWE,oBACzDK,cAtBc,EACpBR,YACAF,OACAG,UACAE,cACC,cAAU,CAAC,CACZM,WAAYT,YACZU,KAAM,CACFZ,OAAAA,OACAG,UAAAA,UACAE,WAAAA,eAEJ,GAUuBQ,CAAgBX,YAAaF,OAAQG,UAAWE,YAClD,KAAjBK,SAASI,MACTC,OAAOC,QAAQC,IAAIP,SAASQ"}