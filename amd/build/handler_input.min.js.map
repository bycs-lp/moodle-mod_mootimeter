{"version":3,"file":"handler_input.min.js","sources":["../src/handler_input.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport Log from 'core/log';\n\nexport const init = (uniqueID) => {\n    const obj = document.getElementById(uniqueID);\n\n    if (!document.getElementById(uniqueID)) {\n        return;\n    }\n\n    obj.addEventListener(\"focusout\", mootimeterStoreInput);\n\n    /**\n     * Store the value.\n     * @returns {mixed}\n     */\n    function mootimeterStoreInput() {\n        const id = obj.id;\n        const pageid = obj.dataset.pageid;\n        const ajaxmethode = obj.dataset.ajaxmethode;\n        const inputname = obj.dataset.name;\n        const inputvalue = document.getElementById(id).value;\n        const thisDataset = JSON.stringify(obj.dataset);\n        return execStoreInputValue(ajaxmethode, pageid, inputname, inputvalue, thisDataset);\n    }\n};\n\n/**\n * Call to store input value\n * @param {string} ajaxmethode\n * @param {int} pageid\n * @param {string} inputname\n * @param {string} inputvalue\n * @param {string} thisDataset\n * @returns {mixed}\n */\nconst storeInputValue = (\n    ajaxmethode,\n    pageid,\n    inputname,\n    inputvalue,\n    thisDataset\n) => fetchMany([{\n    methodname: ajaxmethode,\n    args: {\n        pageid,\n        inputname,\n        inputvalue,\n        thisDataset\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n * @param {string} ajaxmethode\n * @param {int} pageid\n * @param {string} inputname\n * @param {string} inputvalue\n * @param {string} thisDataset\n */\nconst execStoreInputValue = async(ajaxmethode, pageid, inputname, inputvalue, thisDataset) => {\n    const response = await storeInputValue(ajaxmethode, pageid, inputname, inputvalue, thisDataset);\n    if (response.code != 200) {\n        Log.error(response.string);\n    }\n    if (response.code == 200) {\n        Log.info(response.string);\n    }\n};\n"],"names":["uniqueID","obj","document","getElementById","addEventListener","id","pageid","dataset","ajaxmethode","inputname","name","inputvalue","value","thisDataset","JSON","stringify","execStoreInputValue","async","response","methodname","args","storeInputValue","code","error","string","info"],"mappings":"6PAGqBA,iBACXC,IAAMC,SAASC,eAAeH,UAE/BE,SAASC,eAAeH,WAI7BC,IAAIG,iBAAiB,6BAOXC,GAAKJ,IAAII,GACTC,OAASL,IAAIM,QAAQD,OACrBE,YAAcP,IAAIM,QAAQC,YAC1BC,UAAYR,IAAIM,QAAQG,KACxBC,WAAaT,SAASC,eAAeE,IAAIO,MACzCC,YAAcC,KAAKC,UAAUd,IAAIM,gBAChCS,oBAAoBR,YAAaF,OAAQG,UAAWE,WAAYE,uBAqCzEG,oBAAsBC,MAAMT,YAAaF,OAAQG,UAAWE,WAAYE,qBACpEK,cAzBc,EACpBV,YACAF,OACAG,UACAE,WACAE,eACC,cAAU,CAAC,CACZM,WAAYX,YACZY,KAAM,CACFd,OAAAA,OACAG,UAAAA,UACAE,WAAAA,WACAE,YAAAA,gBAEJ,GAWuBQ,CAAgBb,YAAaF,OAAQG,UAAWE,WAAYE,aAC9D,KAAjBK,SAASI,mBACLC,MAAML,SAASM,QAEF,KAAjBN,SAASI,mBACLG,KAAKP,SAASM"}