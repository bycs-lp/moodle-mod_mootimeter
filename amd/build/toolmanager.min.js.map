{"version":3,"file":"toolmanager.min.js","sources":["../src/toolmanager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @typedef {{id: int, tool: string, title: string, question: string,\n * sortindex: int, config: {[key: string]: any}, toolInstance?: Tool}} Page\n */\n\n/**\n * A cool tool Manager.\n *\n * @module     mod_mootimeter/toolmanager\n * @copyright  2023 Justus Dieckmann WWU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nclass ToolManagerClass {\n\n    /** @type {{[key: string]: Tool.constructor}} */\n    tools = {};\n    /** @type {{[key: number]: Page}} */\n    pages = {};\n    /** @type {int} */\n    instanceid;\n    /** @type {boolean} */\n    isEditing;\n\n    elRoot;\n    /** @type HTMLElement */\n    elPagesCol\n    /** @type HTMLElement */;\n    elEditCol;\n    /** @type HTMLElement */\n    elContentCol;\n\n    async init(tools, pages, instanceid, isEditing) {\n        for (let tool of tools) {\n            this.tools[tool] = await import(`mootimetertool_${tool}/tool`);\n        }\n        this.pages = pages;\n        this.instanceid = instanceid;\n        this.isEditing = isEditing;\n\n        this.elRoot = document.querySelector('.mootimetercontainer');\n        this.elPagesCol = this.elRoot.querySelector('.mootimetercolpages');\n        this.elEditCol = this.elRoot.querySelector('.mootimetercoledit');\n        this.elContentCol = this.elRoot.querySelector('.mootimetercolcontent');\n\n        this.elPagesCol.onclick = (e) => {\n            const element = e.target.closest('.mootimeter_pages_li');\n            if (element && element.dataset.pageid) {\n                this.route(element.dataset.pageid);\n            }\n        };\n\n        const params = new URLSearchParams(location.search);\n        if (params.has('pageid')) {\n            await this.route(params.get('pageid'), params.has('results'));\n        }\n    }\n\n    async route(pageID, results = false) {\n        const newUrl = new URL(location);\n        newUrl.search = '';\n        newUrl.searchParams.set('pageid', pageID);\n        if (results) {\n            newUrl.searchParams.set('results', '1');\n        }\n\n        const page = this.pages[pageID];\n        if (!page) {\n            location = newUrl;\n        }\n\n        if (!page.toolInstance) {\n            page.toolInstance = new this.tools[page.tool](page, this.isEditing);\n        }\n\n        history.pushState({}, null, newUrl);\n\n        this.elPagesCol.querySelectorAll('.mootimeter_pages_li.active')\n            .forEach(x => x.classList.remove('active'));\n        this.elPagesCol.querySelector(`.mootimeter_pages_li[data-pageid=\"${page.id}\"]`)?.classList?.add('active');\n\n        this.elContentCol.replaceChildren('plz wait');\n\n        const documentFragment = results ?\n            await page.toolInstance.renderResult() :\n            await page.toolInstance.render();\n\n        this.elContentCol.replaceChildren(...documentFragment.children);\n    }\n}\n\n/** @type */\nexport let ToolManager;\n\nexport const init = async(tools, pages, instanceid, isEditing) => {\n    ToolManager = new ToolManagerClass();\n    await ToolManager.init(tools, pages, instanceid, isEditing);\n};"],"names":["ToolManagerClass","tools","pages","instanceid","isEditing","tool","elRoot","document","querySelector","elPagesCol","this","elEditCol","elContentCol","onclick","e","element","target","closest","dataset","pageid","route","params","URLSearchParams","location","search","has","get","pageID","results","newUrl","URL","searchParams","set","page","toolInstance","history","pushState","querySelectorAll","forEach","x","classList","remove","id","add","replaceChildren","documentFragment","renderResult","render","children","ToolManager","async","init"],"mappings":";;;;;;;WA2BMA,4DAGM,iCAEA,uQAcGC,MAAOC,MAAOC,WAAYC,eAC5B,IAAIC,QAAQJ,WACRA,MAAMI,4NAAsB,kBAAiBA,yTAAAA,uEAAjB,kBAAiBA,oBAEjDH,MAAQA,WACRC,WAAaA,gBACbC,UAAYA,eAEZE,OAASC,SAASC,cAAc,6BAChCC,WAAaC,KAAKJ,OAAOE,cAAc,4BACvCG,UAAYD,KAAKJ,OAAOE,cAAc,2BACtCI,aAAeF,KAAKJ,OAAOE,cAAc,8BAEzCC,WAAWI,QAAWC,UACjBC,QAAUD,EAAEE,OAAOC,QAAQ,wBAC7BF,SAAWA,QAAQG,QAAQC,aACtBC,MAAML,QAAQG,QAAQC,eAI7BE,OAAS,IAAIC,gBAAgBC,SAASC,QACxCH,OAAOI,IAAI,iBACLf,KAAKU,MAAMC,OAAOK,IAAI,UAAWL,OAAOI,IAAI,wBAI9CE,6DAAQC,sEACVC,OAAS,IAAIC,IAAIP,UACvBM,OAAOL,OAAS,GAChBK,OAAOE,aAAaC,IAAI,SAAUL,QAC9BC,SACAC,OAAOE,aAAaC,IAAI,UAAW,WAGjCC,KAAOvB,KAAKR,MAAMyB,QACnBM,OACDV,SAAWM,QAGVI,KAAKC,eACND,KAAKC,aAAe,IAAIxB,KAAKT,MAAMgC,KAAK5B,MAAM4B,KAAMvB,KAAKN,YAG7D+B,QAAQC,UAAU,GAAI,KAAMP,aAEvBpB,WAAW4B,iBAAiB,+BAC5BC,SAAQC,GAAKA,EAAEC,UAAUC,OAAO,+CAChChC,WAAWD,cAAe,qCAAoCyB,KAAKS,+FAASF,oEAAWG,IAAI,eAE3F/B,aAAagC,gBAAgB,kBAE5BC,iBAAmBjB,cACfK,KAAKC,aAAaY,qBAClBb,KAAKC,aAAaa,cAEvBnC,aAAagC,mBAAmBC,iBAAiBG,eAKnDC,2DAESC,MAAMjD,MAAOC,MAAOC,WAAYC,kCAChD6C,YAAc,IAAIjD,uBACZiD,YAAYE,KAAKlD,MAAOC,MAAOC,WAAYC"}