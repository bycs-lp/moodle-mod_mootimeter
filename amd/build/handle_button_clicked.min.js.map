{"version":3,"file":"handle_button_clicked.min.js","sources":["../src/handle_button_clicked.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport Log from 'core/log';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {get_string as getString} from 'core/str';\n\nexport const init = async(uniqueID) => {\n    var obj = document.getElementById(uniqueID);\n\n    if (!document.getElementById(uniqueID)) {\n        return;\n    }\n\n    obj.addEventListener(\"click\", buttonClicked);\n\n    const modal = await ModalFactory.create({\n        type: ModalFactory.types.DELETE_CANCEL,\n        title: getString('delete', 'core'),\n        body: getString('areyousure'),\n        pageid: 5,\n    });\n\n    modal.getRoot().on(ModalEvents.delete, function() {\n        var pageid = obj.dataset.pageid;\n        var uniqueID = obj.id;\n        var ajaxmethode = obj.dataset.ajaxmethode;\n\n        buttonClickedHandle(pageid, uniqueID, ajaxmethode);\n    });\n\n    /**\n     * Store the value.\n     */\n    function buttonClicked() {\n        modal.show();\n    }\n};\n\n/**\n * Call to store input value\n * @param {int} pageid\n * @param {string} thisDataset\n * @param {string} ajaxmethode\n * @returns {mixed}\n */\nconst execButtonClicked = (\n    pageid,\n    thisDataset,\n    ajaxmethode\n) => fetchMany([{\n    methodname: ajaxmethode,\n    args: {\n        pageid,\n        thisDataset\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n * @param {int} pageid\n * @param {string} uniqueID\n * @param {string} ajaxmethode\n */\nconst buttonClickedHandle = async(pageid, uniqueID, ajaxmethode) => {\n    var dataset = JSON.stringify(document.getElementById(uniqueID).dataset);\n    const response = await execButtonClicked(pageid, dataset, ajaxmethode);\n\n    if (response.code != 200) {\n        Log.error(response.string);\n    }\n\n    if (response.code == 200) {\n        Log.error(response.string);\n    }\n};"],"names":["async","obj","document","getElementById","uniqueID","addEventListener","modal","show","ModalFactory","create","type","types","DELETE_CANCEL","title","body","pageid","getRoot","on","ModalEvents","delete","dataset","id","ajaxmethode","buttonClickedHandle","JSON","stringify","response","thisDataset","methodname","args","execButtonClicked","code","error","string"],"mappings":"+fAMoBA,MAAAA,eACZC,IAAMC,SAASC,eAAeC,cAE7BF,SAASC,eAAeC,iBAI7BH,IAAII,iBAAiB,oBAqBjBC,MAAMC,gBAnBJD,YAAcE,uBAAaC,OAAO,CACpCC,KAAMF,uBAAaG,MAAMC,cACzBC,OAAO,mBAAU,SAAU,QAC3BC,MAAM,mBAAU,cAChBC,OAAQ,IAGZT,MAAMU,UAAUC,GAAGC,sBAAYC,QAAQ,eAC/BJ,OAASd,IAAImB,QAAQL,OACrBX,SAAWH,IAAIoB,GACfC,YAAcrB,IAAImB,QAAQE,YAE9BC,oBAAoBR,OAAQX,SAAUkB,uBAoCxCC,oBAAsBvB,MAAMe,OAAQX,SAAUkB,mBAC5CF,QAAUI,KAAKC,UAAUvB,SAASC,eAAeC,UAAUgB,eACzDM,cApBgB,EACtBX,OACAY,YACAL,eACC,cAAU,CAAC,CACZM,WAAYN,YACZO,KAAM,CACFd,OAAAA,OACAY,YAAAA,gBAEJ,GAUuBG,CAAkBf,OAAQK,QAASE,aAErC,KAAjBI,SAASK,mBACLC,MAAMN,SAASO,QAGF,KAAjBP,SAASK,mBACLC,MAAMN,SAASO"}