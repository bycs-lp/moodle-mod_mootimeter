{"version":3,"file":"reload_page.min.js","sources":["../src/reload_page.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport Log from 'core/log';\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport {execReloadPagelist as reloadPagelist} from 'mod_mootimeter/reload_pagelist';\nimport {getGetParams} from 'mod_mootimeter/utils';\nimport {setGetParam} from 'mod_mootimeter/utils';\n\nexport const init = (uniqueID) => {\n\n    const obj = document.getElementById(uniqueID);\n    if (!obj) {\n        return;\n    }\n    obj.addEventListener(\"click\", changePage);\n\n    /**\n     * Store the value.\n     */\n    function changePage() {\n        var pageid = this.dataset.pageid;\n        if (pageid === null || pageid === undefined || pageid == \"undefined\" || pageid.length == 0) {\n            pageid = 0;\n        }\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const cmid = urlParams.get('id');\n        execReloadPage(pageid, cmid, this.dataset);\n    }\n};\n\n/**\n * Call to store input value\n * @param {int} pageid\n * @param {int} cmid\n * @param {string} dataset\n * @returns {array}\n */\nconst reloadPage = (\n    pageid,\n    cmid,\n    dataset\n) => fetchMany([{\n    methodname: 'mod_mootimeter_get_pagecontentparams',\n    args: {\n        pageid,\n        cmid,\n        dataset\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n * @param {int} pageid\n * @param {int} cmid\n * @param {array} dataset\n */\nexport const execReloadPage = async(pageid, cmid, dataset) => {\n\n    if (!dataset) {\n        dataset = getGetParams();\n    } else {\n        Object.assign(dataset, getGetParams());\n    }\n\n    dataset = JSON.stringify(dataset);\n    const response = await reloadPage(pageid, cmid, dataset);\n\n    if (response.code != 200) {\n        Log.error(response.string);\n    }\n\n    if (response.code == 200) {\n\n        var mtmstate = document.getElementById('mootimeterstate');\n\n        const pageparmas = JSON.parse(response.pageparams);\n\n        // Replace the pagecontent.\n        Templates.renderForPromise(pageparmas.pagecontent.template, pageparmas.pagecontent)\n            .then(({html, js}) => {\n                Templates.replaceNodeContents('#mootimeter-pagecontent', html, js);\n                return true;\n            })\n            .catch((error) => displayException(error));\n\n        // Replace the pagecontent menu.\n        if (pageparmas.contentmenu) {\n            Templates.renderForPromise(pageparmas.contentmenu.template, pageparmas.contentmenu)\n                .then(({html, js}) => {\n                    Templates.replaceNode('#mootimeter-pagecontentmenu', html, js);\n                    return true;\n                })\n                .catch((error) => displayException(error));\n\n                // Set subpage URL parameters.\n            if (pageparmas.contentmenu.sp) {\n                var container = document.querySelector(\".mootimetercontainer\");\n                for (const [key, value] of Object.entries(pageparmas.contentmenu.sp)) {\n                    setGetParam(key, value);\n                    setFullscreenClass(container, key, value);\n                }\n            }\n        }\n\n        // Replace the settings col if necessary.\n        if (pageparmas.colsettings) {\n            Templates.renderForPromise(pageparmas.colsettings.template, pageparmas.colsettings)\n                .then(({html, js}) => {\n                    Templates.replaceNodeContents('#mootimeter-col-settings', html, js);\n                    return true;\n                })\n                .catch((error) => displayException(error));\n        }\n\n        if (pageparmas.pageid) {\n\n            // Set new pageid.\n            mtmstate.setAttribute('data-pageid', pageparmas.pageid);\n\n            // Set URL parameter - pageid.\n            setGetParam('pageid', pageparmas.pageid);\n\n        }\n\n        // Set active page marked in pageslist.\n        reloadPagelist(pageid, cmid, true);\n\n\n        // Remove all tooltips of pageslist that are still present.\n        document.querySelectorAll('.tooltip').forEach(e => e.remove());\n    }\n};\n\n/**\n * Set the fullscreen class to the mootimetercontainr\n * @param {mixed} container\n * @param {string} key\n * @param {int} value\n */\nfunction setFullscreenClass(container, key, value) {\n    if (key == 'f' && value == 1) {\n        container.classList.add(\"fullscreen\");\n        document.getElementById(\"page-wrapper\").classList.add(\"fullscreen\");\n    } else if (key == 'f' && value == 0) {\n        container.classList.remove(\"fullscreen\");\n        document.getElementById(\"page-wrapper\").classList.remove(\"fullscreen\");\n    }\n}"],"names":["uniqueID","obj","document","getElementById","addEventListener","pageid","this","dataset","length","queryString","window","location","search","cmid","URLSearchParams","get","execReloadPage","async","Object","assign","JSON","stringify","response","methodname","args","reloadPage","code","error","string","mtmstate","pageparmas","parse","pageparams","renderForPromise","pagecontent","template","then","_ref","html","js","replaceNodeContents","catch","contentmenu","_ref2","replaceNode","sp","container","querySelector","key","value","entries","setFullscreenClass","colsettings","_ref3","setAttribute","querySelectorAll","forEach","e","remove","classList","add"],"mappings":"ygBAQqBA,iBAEXC,IAAMC,SAASC,eAAeH,UAC/BC,KAGLA,IAAIG,iBAAiB,wBAMbC,OAASC,KAAKC,QAAQF,OACtBA,MAAAA,QAAqD,aAAVA,QAA0C,GAAjBA,OAAOG,SAC3EH,OAAS,SAEPI,YAAcC,OAAOC,SAASC,OAE9BC,KADY,IAAIC,gBAAgBL,aACfM,IAAI,MAC3BC,eAAeX,OAAQQ,KAAMP,KAAKC,mBA8B7BS,eAAiBC,MAAMZ,OAAQQ,KAAMN,WAEzCA,QAGDW,OAAOC,OAAOZ,SAAS,0BAFvBA,SAAU,yBAKdA,QAAUa,KAAKC,UAAUd,eACnBe,cA5BS,EACfjB,OACAQ,KACAN,WACC,cAAU,CAAC,CACZgB,WAAY,uCACZC,KAAM,CACFnB,OAAAA,OACAQ,KAAAA,KACAN,QAAAA,YAEJ,GAiBuBkB,CAAWpB,OAAQQ,KAAMN,YAE3B,KAAjBe,SAASI,mBACLC,MAAML,SAASM,QAGF,KAAjBN,SAASI,KAAa,KAElBG,SAAW3B,SAASC,eAAe,yBAEjC2B,WAAaV,KAAKW,MAAMT,SAASU,kCAG7BC,iBAAiBH,WAAWI,YAAYC,SAAUL,WAAWI,aAClEE,MAAKC,WAACC,KAACA,KAADC,GAAOA,mCACAC,oBAAoB,0BAA2BF,KAAMC,KACxD,KAEVE,OAAOd,QAAU,2BAAiBA,SAGnCG,WAAWY,iCACDT,iBAAiBH,WAAWY,YAAYP,SAAUL,WAAWY,aAClEN,MAAKO,YAACL,KAACA,KAADC,GAAOA,oCACAK,YAAY,8BAA+BN,KAAMC,KACpD,KAEVE,OAAOd,QAAU,2BAAiBA,SAGnCG,WAAWY,YAAYG,IAAI,KACvBC,UAAY5C,SAAS6C,cAAc,4BAClC,MAAOC,IAAKC,SAAU/B,OAAOgC,QAAQpB,WAAWY,YAAYG,2BACjDG,IAAKC,OACjBE,mBAAmBL,UAAWE,IAAKC,OAM3CnB,WAAWsB,gCACDnB,iBAAiBH,WAAWsB,YAAYjB,SAAUL,WAAWsB,aAClEhB,MAAKiB,YAACf,KAACA,KAADC,GAAOA,oCACAC,oBAAoB,2BAA4BF,KAAMC,KACzD,KAEVE,OAAOd,QAAU,2BAAiBA,SAGvCG,WAAWzB,SAGXwB,SAASyB,aAAa,cAAexB,WAAWzB,+BAGpC,SAAUyB,WAAWzB,iDAKtBA,OAAQQ,MAAM,GAI7BX,SAASqD,iBAAiB,YAAYC,SAAQC,GAAKA,EAAEC,sBAUpDP,mBAAmBL,UAAWE,IAAKC,OAC7B,KAAPD,KAAuB,GAATC,OACdH,UAAUa,UAAUC,IAAI,cACxB1D,SAASC,eAAe,gBAAgBwD,UAAUC,IAAI,eACxC,KAAPZ,KAAuB,GAATC,QACrBH,UAAUa,UAAUD,OAAO,cAC3BxD,SAASC,eAAe,gBAAgBwD,UAAUD,OAAO"}