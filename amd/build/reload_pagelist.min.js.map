{"version":3,"file":"reload_pagelist.min.js","sources":["../src/reload_pagelist.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport Log from 'core/log';\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport {execReloadPage as reloadPage} from 'mod_mootimeter/reload_page';\n\nexport const init = () => {\n    var obj = document.getElementById('mootimeterstate');\n\n    if (!obj) {\n        return;\n    }\n\n    setInterval(() => {\n        getPagelist();\n    }, 5000);\n\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const cmid = urlParams.get('id');\n    var pageid = urlParams.get('pageid');\n    if (pageid === null || pageid === undefined || pageid.length == 0) {\n        pageid = 0;\n    }\n    reloadPage(pageid, cmid, '');\n\n    /**\n     * Store the value.\n     */\n    function getPagelist() {\n        var pageid = document.getElementById('mootimeterstate').dataset.pageid;\n        if (pageid == \"undefined\" || pageid.length == 0) {\n            pageid = 0;\n        }\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const cmid = urlParams.get('id');\n        execReloadPagelist(pageid, cmid);\n    }\n};\n\n/**\n * Call to store input value\n * @param {int} pageid\n * @param {int} cmid\n * @returns {array}\n */\nconst reloadPagelist = (\n    pageid,\n    cmid\n) => fetchMany([{\n    methodname: 'mod_mootimeter_get_pages_list',\n    args: {\n        pageid,\n        cmid\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n * @param {int} pageid\n * @param {int} cmid\n * @param {bool} forcereload\n */\nexport const execReloadPagelist = async(pageid, cmid, forcereload = false) => {\n    const response = await reloadPagelist(pageid, cmid);\n\n    if (response.code != 200) {\n        Log.error(response.string);\n    }\n\n    if (response.code == 200) {\n\n        var mtmstate = document.getElementById('mootimeterstate');\n\n        const pagelist = JSON.parse(response.pagelist);\n\n        // If there are no changes in pagelist. We are finished.\n        if (mtmstate.dataset.pagelisttime == pagelist.pagelisttime && !forcereload) {\n            return;\n        }\n\n        // Set new pagelisttime state.\n        mtmstate.setAttribute('data-pagelisttime', pagelist.pagelisttime);\n\n        // Replace the pages list.\n        Templates.renderForPromise('mod_mootimeter/elements/snippet_page_list', pagelist)\n            .then(({html, js}) => {\n                Templates.replaceNodeContents('#mootimeter-pages-list', html, js);\n                return true;\n            })\n            .catch((error) => displayException(error));\n    }\n};"],"names":["document","getElementById","setInterval","pageid","dataset","length","queryString","window","location","search","cmid","URLSearchParams","get","execReloadPagelist","getPagelist","urlParams","reloadPagelist","methodname","args","async","forcereload","response","code","error","string","mtmstate","pagelist","JSON","parse","pagelisttime","setAttribute","renderForPromise","then","_ref","html","js","replaceNodeContents","catch"],"mappings":"2eAMoB,SACNA,SAASC,eAAe,0BAMlCC,aAAY,qBAiBJC,OAASH,SAASC,eAAe,mBAAmBG,QAAQD,OAClD,aAAVA,QAA0C,GAAjBA,OAAOE,SAChCF,OAAS,SAEPG,YAAcC,OAAOC,SAASC,OAE9BC,KADY,IAAIC,gBAAgBL,aACfM,IAAI,MAC3BC,mBAAmBV,OAAQO,MAvB3BI,KACD,WAEGR,YAAcC,OAAOC,SAASC,OAC9BM,UAAY,IAAIJ,gBAAgBL,aAChCI,KAAOK,UAAUH,IAAI,UACvBT,OAASY,UAAUH,IAAI,UACvBT,MAAAA,QAA4D,GAAjBA,OAAOE,SAClDF,OAAS,mCAEFA,OAAQO,KAAM,WAuBvBM,eAAiB,CACnBb,OACAO,QACC,cAAU,CAAC,CACZO,WAAY,gCACZC,KAAM,CACFf,OAAAA,OACAO,KAAAA,SAEJ,GAQSG,mBAAqBM,eAAMhB,OAAQO,UAAMU,0EAC5CC,eAAiBL,eAAeb,OAAQO,SAEzB,KAAjBW,SAASC,mBACLC,MAAMF,SAASG,QAGF,KAAjBH,SAASC,KAAa,KAElBG,SAAWzB,SAASC,eAAe,yBAEjCyB,SAAWC,KAAKC,MAAMP,SAASK,aAGjCD,SAASrB,QAAQyB,cAAgBH,SAASG,eAAiBT,mBAK/DK,SAASK,aAAa,oBAAqBJ,SAASG,iCAG1CE,iBAAiB,4CAA6CL,UACnEM,MAAKC,WAACC,KAACA,KAADC,GAAOA,mCACAC,oBAAoB,yBAA0BF,KAAMC,KACvD,KAEVE,OAAOd,QAAU,2BAAiBA"}