{"version":3,"file":"newpage.min.js","sources":["../src/newpage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {get_string as getString} from \"core/str\";\nimport {ToolManager} from \"mod_mootimeter/toolmanager\";\nimport Ajax from \"core/ajax\";\nimport notification from \"core/notification\";\n\n/**\n * A cool tool Manager.\n *\n * @module     mod_mootimeter/newpage\n * @copyright  2023 Justus Dieckmann WWU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Creates an empty Page for the given Tool\n * @param {string} tool\n */\nasync function createEmptyPage(tool) {\n    const {pageid} = await Ajax.call([{\n        methodname: 'mod_mootimeter_create_page',\n        args: {\n            instanceid: ToolManager.instanceid,\n            tool: tool\n        },\n        fail: notification.exception,\n    }])[0];\n    // TODO Rerender Pageslist.\n    window.location.search = '?pageid=' + pageid;\n}\n\n/**\n * Handles the modal and the creation of a new page.\n */\nexport async function handleNewPage() {\n    const html = Templates.render('mod_mootimeter/settings/select', {\n        name: 'choosepagetype',\n        id: 'id_choosepagetype',\n        label: '',\n        options: Object.entries(ToolManager.tools).map(([key, {label}]) => {return {value: key, label};})\n    });\n    const modal = await ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: await getString('choosepagetype', 'mod_mootimeter'),\n        body: html\n    });\n    modal.getRoot().on(ModalEvents.save, async (e) => {\n        const tool = e.currentTarget.querySelector('#id_choosepagetype').value;\n        await createEmptyPage(tool);\n    });\n    modal.show();\n}"],"names":["html","Templates","render","name","id","label","options","Object","entries","ToolManager","tools","map","_ref","key","value","modal","ModalFactory","create","type","types","SAVE_CANCEL","title","body","getRoot","on","ModalEvents","save","async","tool","e","currentTarget","querySelector","pageid","Ajax","call","methodname","args","instanceid","fail","notification","exception","window","location","search","createEmptyPage","show"],"mappings":";;;;;;;2GAoDUA,KAAOC,mBAAUC,OAAO,iCAAkC,CAC5DC,KAAM,iBACNC,GAAI,oBACJC,MAAO,GACPC,QAASC,OAAOC,QAAQC,yBAAYC,OAAOC,KAAIC,WAAEC,KAAKR,MAACA,mBAAoB,CAACS,MAAOD,IAAKR,MAAAA,YAEtFU,YAAcC,uBAAaC,OAAO,CACpCC,KAAMF,uBAAaG,MAAMC,YACzBC,YAAa,mBAAU,iBAAkB,kBACzCC,KAAMtB,OAEVe,MAAMQ,UAAUC,GAAGC,sBAAYC,MAAMC,MAAAA,UAC3BC,KAAOC,EAAEC,cAAcC,cAAc,sBAAsBjB,2BA7B1Cc,YACrBI,OAACA,cAAgBC,cAAKC,KAAK,CAAC,CAC9BC,WAAY,6BACZC,KAAM,CACFC,WAAY5B,yBAAY4B,WACxBT,KAAMA,MAEVU,KAAMC,sBAAaC,aACnB,GAEJC,OAAOC,SAASC,OAAS,WAAaX,OAoB5BY,CAAgBhB,SAE1Bb,MAAM8B"}