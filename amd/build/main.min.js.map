{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["import { call as fetchMany } from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport { get_string as getString } from 'core/str';\n\nexport const init = async () => {\n    // Eventlistener to change page.\n    var elements = document.getElementsByClassName(\"mootimeter_pages_li\");\n    if (elements) {\n        Array.from(elements).forEach(function (element) {\n            element.addEventListener('click', function () {\n                var pageid = this.dataset.pageid;\n                var cmid = this.dataset.cmid;\n                location.href = 'view.php?id=' + cmid + '&pageid=' + pageid;\n            });\n        });\n    }\n\n    var addnewpagebtn = document.getElementById(\"mootimeter_addpage\");\n    if (addnewpagebtn) {\n        addnewpagebtn.addEventListener('click', function () {\n            var cmid = this.dataset.cmid;\n            location.href = 'view.php?id=' + cmid + \"&a=addpage\";\n        });\n    }\n\n    const modal = await ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: getString('delete', 'core'),\n        body: getString('areyousure'),\n        pageid: 5,\n    });\n\n    modal.getRoot().on(ModalEvents.save, function () {\n        var pageid = document.getElementById(\"btn-delete_page\").dataset.pageid;\n        execDeletePage(pageid);\n    });\n\n    var deletebtns = document.getElementsByClassName(\"mootimeter-delete-page-btn\");\n    if (deletebtns) {\n        Array.from(deletebtns).forEach(function (element) {\n            element.addEventListener('click', function () {\n                modal.show();\n            });\n        });\n    }\n\n    /**\n    * Call to store input value\n    * @param {int} pageid\n    * @returns\n    */\n    const deletePageCall = (\n        pageid,\n    ) => fetchMany([{\n        methodname: 'mod_mootimeter_delete_page',\n        args: {\n            pageid\n        },\n    }])[0];\n\n    /**\n     * Executes the call to store input value.\n     * @param {string} ajaxmethode\n     * @param {int} pageid\n     * @param {string} inputname\n     * @param {string} inputvalue\n     */\n    const execDeletePage = async (pageid) => {\n        const response = await deletePageCall(pageid);\n        if (response.code != 200) {\n            window.console.log(response.string);\n            return;\n        }\n\n        window.location.href = window.location.origin\n            + window.location.pathname + \"?id=\" + response.cmid;\n    };\n};\n"],"names":["async","elements","document","getElementsByClassName","Array","from","forEach","element","addEventListener","pageid","this","dataset","cmid","location","href","addnewpagebtn","getElementById","modal","ModalFactory","create","type","types","SAVE_CANCEL","title","body","getRoot","on","ModalEvents","save","execDeletePage","deletebtns","show","response","methodname","args","deletePageCall","code","window","origin","pathname","console","log","string"],"mappings":"4bAKoBA,cAEZC,SAAWC,SAASC,uBAAuB,uBAC3CF,UACAG,MAAMC,KAAKJ,UAAUK,SAAQ,SAAUC,SACnCA,QAAQC,iBAAiB,SAAS,eAC1BC,OAASC,KAAKC,QAAQF,OACtBG,KAAOF,KAAKC,QAAQC,KACxBC,SAASC,KAAO,eAAiBF,KAAO,WAAaH,iBAK7DM,cAAgBb,SAASc,eAAe,sBACxCD,eACAA,cAAcP,iBAAiB,SAAS,eAChCI,KAAOF,KAAKC,QAAQC,KACxBC,SAASC,KAAO,eAAiBF,KAAO,sBAI1CK,YAAcC,uBAAaC,OAAO,CACpCC,KAAMF,uBAAaG,MAAMC,YACzBC,OAAO,mBAAU,SAAU,QAC3BC,MAAM,mBAAU,cAChBf,OAAQ,IAGZQ,MAAMQ,UAAUC,GAAGC,sBAAYC,MAAM,eAC7BnB,OAASP,SAASc,eAAe,mBAAmBL,QAAQF,OAChEoB,eAAepB,eAGfqB,WAAa5B,SAASC,uBAAuB,8BAC7C2B,YACA1B,MAAMC,KAAKyB,YAAYxB,SAAQ,SAAUC,SACrCA,QAAQC,iBAAiB,SAAS,WAC9BS,MAAMc,mBA0BZF,eAAiB7B,MAAAA,eACbgC,cAhBNvB,CAAAA,SACC,cAAU,CAAC,CACZwB,WAAY,6BACZC,KAAM,CACFzB,OAAAA,WAEJ,GAUuB0B,CAAe1B,QACjB,KAAjBuB,SAASI,KAKbC,OAAOxB,SAASC,KAAOuB,OAAOxB,SAASyB,OACjCD,OAAOxB,SAAS0B,SAAW,OAASP,SAASpB,KAL/CyB,OAAOG,QAAQC,IAAIT,SAASU"}