{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["import { call as fetchMany } from 'core/ajax';\n\nexport const init = () => {\n    // Eventlistener to change page.\n    var elements = document.getElementsByClassName(\"mootimeter_pages_li\");\n    if (elements) {\n        Array.from(elements).forEach(function (element) {\n            element.addEventListener('click', function () {\n                var pageid = this.dataset.pageid;\n                var cmid = this.dataset.cmid;\n                location.href = 'view.php?id=' + cmid + '&pageid=' + pageid;\n            });\n        });\n    }\n\n    var addnewpagebtn = document.getElementById(\"mootimeter_addpage\");\n    if (addnewpagebtn) {\n        addnewpagebtn.addEventListener('click', function () {\n            var cmid = this.dataset.cmid;\n            location.href = 'view.php?id=' + cmid + \"&a=addpage\";\n        });\n    }\n\n    var deletebtns = document.getElementsByClassName(\"mootimeter-delete-page-btn\");\n    if (deletebtns) {\n        Array.from(deletebtns).forEach(function (element) {\n            element.addEventListener('click', function () {\n                var pageid = this.dataset.pageid;\n                execDeletePage(pageid);\n            });\n        });\n    }\n\n    /**\n    * Call to store input value\n    * @param {int} pageid\n    * @returns\n    */\n    const deletePageCall = (\n        pageid,\n    ) => fetchMany([{\n        methodname: 'mod_mootimeter_delete_page',\n        args: {\n            pageid\n        },\n    }])[0];\n\n    /**\n     * Executes the call to store input value.\n     * @param {string} ajaxmethode\n     * @param {int} pageid\n     * @param {string} inputname\n     * @param {string} inputvalue\n     */\n    const execDeletePage = async (pageid) => {\n        const response = await deletePageCall(pageid);\n        if (response.code != 200) {\n            window.console.log(response.string);\n            return;\n        }\n\n        window.location.href = window.location.origin\n            + window.location.pathname + \"?id=\" + response.cmid;\n    };\n};\n"],"names":["elements","document","getElementsByClassName","Array","from","forEach","element","addEventListener","pageid","this","dataset","cmid","location","href","addnewpagebtn","getElementById","deletebtns","execDeletePage","async","response","methodname","args","deletePageCall","code","window","origin","pathname","console","log","string"],"mappings":"0KAEoB,SAEZA,SAAWC,SAASC,uBAAuB,uBAC3CF,UACAG,MAAMC,KAAKJ,UAAUK,SAAQ,SAAUC,SACnCA,QAAQC,iBAAiB,SAAS,eAC1BC,OAASC,KAAKC,QAAQF,OACtBG,KAAOF,KAAKC,QAAQC,KACxBC,SAASC,KAAO,eAAiBF,KAAO,WAAaH,iBAK7DM,cAAgBb,SAASc,eAAe,sBACxCD,eACAA,cAAcP,iBAAiB,SAAS,eAChCI,KAAOF,KAAKC,QAAQC,KACxBC,SAASC,KAAO,eAAiBF,KAAO,oBAI5CK,WAAaf,SAASC,uBAAuB,8BAC7Cc,YACAb,MAAMC,KAAKY,YAAYX,SAAQ,SAAUC,SACrCA,QAAQC,iBAAiB,SAAS,eAC1BC,OAASC,KAAKC,QAAQF,OAC1BS,eAAeT,oBA0BrBS,eAAiBC,MAAAA,eACbC,cAhBNX,CAAAA,SACC,cAAU,CAAC,CACZY,WAAY,6BACZC,KAAM,CACFb,OAAAA,WAEJ,GAUuBc,CAAed,QACjB,KAAjBW,SAASI,KAKbC,OAAOZ,SAASC,KAAOW,OAAOZ,SAASa,OACjCD,OAAOZ,SAASc,SAAW,OAASP,SAASR,KAL/Ca,OAAOG,QAAQC,IAAIT,SAASU"}