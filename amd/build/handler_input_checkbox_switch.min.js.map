{"version":3,"file":"handler_input_checkbox_switch.min.js","sources":["../src/handler_input_checkbox_switch.js"],"sourcesContent":["import { call as fetchMany } from 'core/ajax';\n\nexport const init = (uniqueID) => {\n    var obj = document.getElementById(uniqueID);\n    obj.addEventListener(\"click\", store);\n\n    /**\n     * Store the value.\n     */\n    function store() {\n        var id = this.id;\n\n        var pageid = this.dataset.pageid;\n        var ajaxmethode = this.dataset.ajaxmethode;\n        var inputname = this.dataset.name;\n        var inputvalue = 0;\n        var thisDataset = JSON.stringify(this.dataset);\n\n        if (document.getElementById(id).checked) {\n            inputvalue = 1;\n        }\n        window.console.log(thisDataset);\n        setCbState(ajaxmethode, pageid, inputname, inputvalue, thisDataset);\n    }\n};\n\n/**\n * Executes the call to store cb state.\n * @param {string} ajaxmethode\n * @param {int} pageid\n * @param {string} inputname\n * @param {string} inputvalue\n * @param {string} thisDataset\n * @returns\n */\nconst execSetCbState = (\n    ajaxmethode,\n    pageid,\n    inputname,\n    inputvalue,\n    thisDataset\n) => fetchMany([{\n    methodname: ajaxmethode,\n    args: {\n        pageid,\n        inputname,\n        inputvalue,\n        thisDataset\n    },\n}])[0];\n\n/**\n * Store cb state.\n * @param {int} pageid\n * @param {string} inputname\n * @param {string} inputvalue\n * @param {string} thisDataset\n */\nconst setCbState = async (ajaxmethode, pageid, inputname, inputvalue, thisDataset) => {\n    const response = await execSetCbState(ajaxmethode, pageid, inputname, inputvalue, thisDataset);\n    if (response.code != 200) {\n        window.console.log(response.string);\n    }\n};"],"names":["uniqueID","document","getElementById","addEventListener","id","this","pageid","dataset","ajaxmethode","inputname","name","inputvalue","thisDataset","JSON","stringify","checked","window","console","log","setCbState","async","response","methodname","args","execSetCbState","code","string"],"mappings":"mMAEqBA,WACPC,SAASC,eAAeF,UAC9BG,iBAAiB,wBAMbC,GAAKC,KAAKD,GAEVE,OAASD,KAAKE,QAAQD,OACtBE,YAAcH,KAAKE,QAAQC,YAC3BC,UAAYJ,KAAKE,QAAQG,KACzBC,WAAa,EACbC,YAAcC,KAAKC,UAAUT,KAAKE,SAElCN,SAASC,eAAeE,IAAIW,UAC5BJ,WAAa,GAEjBK,OAAOC,QAAQC,IAAIN,aACnBO,WAAWX,YAAaF,OAAQG,UAAWE,WAAYC,uBAoCzDO,WAAaC,MAAOZ,YAAaF,OAAQG,UAAWE,WAAYC,qBAC5DS,cAxBa,EACnBb,YACAF,OACAG,UACAE,WACAC,eACC,cAAU,CAAC,CACZU,WAAYd,YACZe,KAAM,CACFjB,OAAAA,OACAG,UAAAA,UACAE,WAAAA,WACAC,YAAAA,gBAEJ,GAUuBY,CAAehB,YAAaF,OAAQG,UAAWE,WAAYC,aAC7D,KAAjBS,SAASI,MACTT,OAAOC,QAAQC,IAAIG,SAASK"}